name: Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.0, etc.

env:
  DOTNET_VERSION: '8.0.x'
  SOLUTION_FILE: 'IntegrationGateway.sln'
  BUILD_CONFIGURATION: 'Release'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_FILE }}

      - name: Build solution
        run: dotnet build ${{ env.SOLUTION_FILE }} --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore

      - name: Run tests
        run: dotnet test ${{ env.SOLUTION_FILE }} --configuration ${{ env.BUILD_CONFIGURATION }} --no-build --verbosity normal

      - name: Publish application
        run: |
          dotnet publish src/IntegrationGateway.Api/IntegrationGateway.Api.csproj \
            --configuration ${{ env.BUILD_CONFIGURATION }} \
            --no-build \
            --output ./publish/linux-x64 \
            --runtime linux-x64 \
            --self-contained false
          
          dotnet publish src/IntegrationGateway.Api/IntegrationGateway.Api.csproj \
            --configuration ${{ env.BUILD_CONFIGURATION }} \
            --no-build \
            --output ./publish/win-x64 \
            --runtime win-x64 \
            --self-contained false

      - name: Create release archives
        run: |
          cd publish
          tar -czf integration-gateway-linux-x64.tar.gz linux-x64/
          zip -r integration-gateway-win-x64.zip win-x64/

      - name: Generate changelog
        id: changelog
        run: |
          # Get previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          
          if [ -z "$PREVIOUS_TAG" ]; then
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            echo "First release of Integration Gateway" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD | head -20 >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push release Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./src/IntegrationGateway.Api/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/integration-gateway:${{ github.ref_name }}
            ghcr.io/${{ github.repository_owner }}/integration-gateway:latest
          labels: |
            org.opencontainers.image.title=Integration Gateway
            org.opencontainers.image.description=Enterprise Integration Gateway API
            org.opencontainers.image.version=${{ github.ref_name }}
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.revision=${{ github.sha }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Integration Gateway ${{ github.ref_name }}
          body: |
            ## What's Changed
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Docker Images
            
            ```bash
            docker pull ghcr.io/${{ github.repository_owner }}/integration-gateway:${{ github.ref_name }}
            ```
            
            ## Installation
            
            1. Download the appropriate binary for your platform
            2. Extract the archive
            3. Configure your `appsettings.json`
            4. Run the application
            
            ## Requirements
            
            - .NET 8.0 Runtime
            - SQL Server (for production)
            - Azure Application Insights (optional)
            
            Full documentation available at: [docs/](./docs/)
          files: |
            publish/integration-gateway-linux-x64.tar.gz
            publish/integration-gateway-win-x64.zip
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}

  update-deployment:
    name: Update Production Deployment
    runs-on: ubuntu-latest
    needs: create-release
    if: ${{ !contains(github.ref_name, '-') }}  # Only for stable releases
    environment: production
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Update Azure Container App
        uses: azure/container-apps-deploy-action@v2
        with:
          containerAppName: integration-gateway
          resourceGroup: ${{ secrets.AZURE_RESOURCE_GROUP }}
          imageToDeploy: ghcr.io/${{ github.repository_owner }}/integration-gateway:${{ github.ref_name }}
          environmentVariables: |
            ASPNETCORE_ENVIRONMENT=Production
            ApplicationInsights__ConnectionString=${{ secrets.APPINSIGHTS_CONNECTION_STRING }}
            Jwt__SecretKey=${{ secrets.JWT_SECRET_KEY }}

      - name: Notify release
        run: |
          curl -X POST ${{ secrets.TEAMS_WEBHOOK_URL }} \
            -H 'Content-Type: application/json' \
            -d '{
              "text": "ðŸŽ‰ Integration Gateway ${{ github.ref_name }} released and deployed!",
              "sections": [{
                "activityTitle": "New Release",
                "activitySubtitle": "Version ${{ github.ref_name }}",
                "facts": [
                  {"name": "Repository", "value": "${{ github.repository }}"},
                  {"name": "Release URL", "value": "${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref_name }}"},
                  {"name": "Docker Image", "value": "ghcr.io/${{ github.repository_owner }}/integration-gateway:${{ github.ref_name }}"}
                ]
              }]
            }'